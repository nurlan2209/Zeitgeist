// AudioManager.jsx
import React, { useState, useEffect } from 'react';
import AudioForm from './AudioForm';
import { useAuth } from '../../service/AuthContext';

// URL API –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
const ADMIN_API_URL = 'http://127.0.0.1:5000/admin';
const API_URL = 'http://127.0.0.1:5000/api';

const AudioManager = () => {
  const [audioItems, setAudioItems] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [showForm, setShowForm] = useState(false);
  const [currentAudio, setCurrentAudio] = useState(null);
  const token = localStorage.getItem('authToken');
    const { user, isAdmin, logout } = useAuth();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–µ–π
  const fetchAudioItems = async () => {
    try {
      setLoading(true);
      const response = await fetch(`${API_URL}/audio`, {
        credentials: 'include',
      });
      
      if (response.ok) {
        const data = await response.json();
        setAudioItems(data.newsAudio || []);
        setError(null);
      } else {
        const errorData = await response.json();
        setError(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö');
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–µ–π:', err);
      setError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchAudioItems();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏
  const handleCreate = () => {
    setCurrentAudio({
      title: '',
      category: '',
      description: '',
      audioUrl: '',
      date: '',
      duration: 0
    });
    setShowForm(true);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏
  const handleEdit = (audioItem) => {
    setCurrentAudio({ ...audioItem });
    setShowForm(true);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏
  const handleDelete = async (id) => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç—å?')) {
      return;
    }
    
    try {
      const response = await fetch(`${ADMIN_API_URL}/audio/${id}`, {
        method: 'DELETE',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,
        },
      });
      
      if (response.ok) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
        fetchAudioItems();
      } else {
        const errorData = await response.json();
        alert(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏');
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏:', err);
      alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏ (—Å–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
  const handleSave = async (audioData) => {
    try {
      const isNew = !audioData.id;
      const url = isNew 
        ? `${ADMIN_API_URL}/audio` 
        : `${ADMIN_API_URL}/audio/${audioData.id}`;
      
      const response = await fetch(url, {
        method: isNew ? 'POST' : 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,
        },
        body: JSON.stringify(audioData),
        credentials: 'include',
      });
      
      if (response.ok) {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–µ–π
        setShowForm(false);
        fetchAudioItems();
      } else {
        const errorData = await response.json();
        alert(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏');
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏:', err);
      alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    }
  };

  if (loading && audioItems.length === 0) {
    return <div className="loading-message">–ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–µ–π...</div>;
  }

  return (
    <div className="manager-section">
      <div className="manager-header">
        <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç—è–º–∏</h2>
        <button onClick={handleCreate} className="add-button">
          –î–æ–±–∞–≤–∏—Ç—å –∞—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç—å
        </button>
      </div>

      {error && <div className="error-message">{error}</div>}

      <table className="data-table">
        <thead>
          <tr>
            <th>ID</th>
            <th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
            <th>–ó–∞–≥–æ–ª–æ–≤–æ–∫</th>
            <th>–î–∞—Ç–∞</th>
            <th>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</th>
            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          {audioItems.length === 0 ? (
            <tr>
              <td colSpan="6" className="empty-message">
                –ê—É–¥–∏–æ–Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
              </td>
            </tr>
          ) : (
            audioItems.map((item) => (
              <tr key={item.id}>
                <td>{item.id}</td>
                <td>{item.category}</td>
                <td>{item.title}</td>
                <td>{item.date}</td>
                <td>{item.duration} —Å–µ–∫.</td>
                <td className="action-buttons">
                  <button 
                    onClick={() => handleEdit(item)} 
                    className="edit-button"
                  >
                    üñåÔ∏è
                  </button>
                  <button 
                    onClick={() => handleDelete(item.id)} 
                    className="delete-button"
                  >
                    üóëÔ∏è
                  </button>
                </td>
              </tr>
            ))
          )}
        </tbody>
      </table>

      {showForm && (
        <AudioForm 
          audioItem={currentAudio}
          onSave={handleSave}
          onCancel={() => setShowForm(false)}
        />
      )}
    </div>
  );
};

export default AudioManager;